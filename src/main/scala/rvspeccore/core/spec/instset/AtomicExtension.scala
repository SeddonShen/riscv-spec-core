package rvspeccore.core.spec.instset

import chisel3._
import chisel3.util._

import rvspeccore.core.BaseCore
import rvspeccore.core.spec._
import rvspeccore.core.tool.BitTool._

trait AtomicExtensionInsts {
  val LR_D    = Inst("b00010_??_00000_?????_011_?????_0101111")
  val SC_D    = Inst("b00011_??_?????_?????_011_?????_0101111")
  val LR_W    = Inst("b00010_??_00000_?????_010_?????_0101111")
  val SC_W    = Inst("b00011_??_?????_?????_010_?????_0101111")
  val AMOSWAP = Inst("b00001_??_?????_?????_01?_?????_0101111")
  val AMOADD  = Inst("b00000_??_?????_?????_01?_?????_0101111")
  val AMOXOR  = Inst("b00100_??_?????_?????_01?_?????_0101111")
  val AMOAND  = Inst("b01100_??_?????_?????_01?_?????_0101111")
  val AMOOR   = Inst("b01000_??_?????_?????_01?_?????_0101111")
  val AMOMIN  = Inst("b10000_??_?????_?????_01?_?????_0101111")
  val AMOMAX  = Inst("b10100_??_?????_?????_01?_?????_0101111")
  val AMOMINU = Inst("b11000_??_?????_?????_01?_?????_0101111")
  val AMOMAXU = Inst("b11100_??_?????_?????_01?_?????_0101111")
}

trait AtomicExtension extends BaseCore with CommonDecode with AtomicExtensionInsts {
  def doRV32A: Unit = {
    // FIXME: not yet implemented
    when(LR_D(inst))    { decodeI; }
    // when(SC_D(inst))    { decodeSA; }
    when(LR_W(inst))    { decodeI; }
    // when(SC_W(inst))    { decodeSA; }
    when(AMOSWAP(inst)) { decodeR; }
    when(AMOADD(inst))  { decodeR; }
    when(AMOXOR(inst))  { decodeR; }
    when(AMOAND(inst))  { decodeR; }
    when(AMOOR(inst))   { decodeR; }
    when(AMOMIN(inst))  { decodeR; }
    when(AMOMAX(inst))  { decodeR; }
    when(AMOMINU(inst)) { decodeR; }
    when(AMOMAXU(inst)) { decodeR; }

  }

  def doRV64A: Unit = {
    // FIXME: not yet implemented
    doRV32A
  }
}
